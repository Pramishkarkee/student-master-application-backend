# Generated by Django 3.2.6 on 2021-09-29 11:38

import apps.student.utils.file_function
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('college', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.instituteuser')),
                ('name', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('category', models.CharField(max_length=200)),
                ('university', models.CharField(blank=True, max_length=200)),
                ('established', models.CharField(max_length=200)),
                ('logourl', models.FileField(upload_to=apps.student.utils.file_function.content_file_name)),
                ('coverpage', models.FileField(upload_to=apps.student.utils.file_function.content_file_name)),
                ('brochure', models.FileField(blank=True, upload_to=apps.student.utils.file_function.content_file_name, validators=[apps.student.utils.file_function.pdfformat])),
                ('country', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=300)),
                ('lat', models.FloatField()),
                ('long', models.FloatField()),
                ('about', models.TextField(blank=True)),
                ('type', models.CharField(default='private', max_length=200)),
                ('schlorship', models.BooleanField(default=True)),
                ('website', models.URLField(blank=True)),
                ('review', models.FloatField(default=1.1)),
                ('select_restricted_country', models.BooleanField(default=False)),
                ('add_course', models.BooleanField(default=False)),
                ('male_student', models.IntegerField(default=0)),
                ('femail_student', models.IntegerField(default=0)),
                ('professor', models.IntegerField(default=0)),
                ('teacher', models.IntegerField(default=0)),
                ('staff', models.IntegerField(default=0)),
                ('approved_by', models.CharField(default='UGC', max_length=200)),
                ('dashboard_custom_color', models.CharField(max_length=20)),
                ('light_mode', models.BooleanField(default=True)),
                ('area', models.CharField(blank=True, default='', max_length=200)),
                ('climate_description', models.CharField(blank=True, default='', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StanderedRating',
            fields=[
                ('college', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='user.instituteuser')),
                ('country_rank', models.FileField(upload_to='')),
                ('world_rank', models.FileField(upload_to='')),
                ('international_student', models.IntegerField()),
                ('m_f_ratio', models.FloatField()),
                ('students', models.IntegerField()),
                ('no_of_student_per_staff', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Canteen',
            fields=[
                ('college', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='college.college')),
                ('building', models.CharField(max_length=40)),
                ('floor', models.CharField(max_length=20)),
                ('area', models.CharField(max_length=200)),
                ('student_capacity', models.CharField(max_length=30)),
                ('no_staff', models.CharField(max_length=40)),
                ('hygiene', models.CharField(choices=[('poor', 'POOR'), ('good', 'GOOD'), ('very good', 'VERYGOOD'), ('excellent', 'EXCELLENT')], max_length=40)),
                ('air_condition', models.BooleanField()),
                ('fan', models.BooleanField()),
                ('wash_room', models.BooleanField()),
                ('wifi', models.BooleanField()),
                ('drinking_water', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='LibraryModel',
            fields=[
                ('college', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='college.college')),
                ('building_no', models.CharField(max_length=100)),
                ('floor_no', models.CharField(max_length=100)),
                ('room_no', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('no_books', models.IntegerField()),
                ('reading_room', models.BooleanField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_type', models.CharField(max_length=200)),
                ('building', models.CharField(max_length=100)),
                ('floor', models.CharField(blank=True, max_length=200)),
                ('room', models.CharField(blank=True, max_length=200)),
                ('student_capacity', models.CharField(max_length=200)),
                ('opening_time', models.TimeField(blank=True)),
                ('closing_time', models.TimeField(blank=True)),
                ('description', models.TextField()),
                ('no_staff', models.IntegerField()),
                ('safety', models.CharField(choices=[('poor', 'POOR'), ('good', 'GOOD'), ('very good', 'VERYGOOD'), ('excellent', 'EXCELLENT')], max_length=200)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('picture', models.FileField(upload_to=apps.student.utils.file_function.content_Gallery_name, validators=[apps.student.utils.file_function.validate_file])),
                ('date', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='CounselorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('photo', models.FileField(upload_to=apps.student.utils.file_function.content_file_name)),
                ('contact', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('description', models.TextField()),
                ('responsibility', models.TextField()),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
        ),
        migrations.AddField(
            model_name='college',
            name='facility',
            field=models.ManyToManyField(to='college.Facility'),
        ),
        migrations.AddField(
            model_name='blog',
            name='college',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college'),
        ),
        migrations.AddField(
            model_name='accomodation',
            name='college',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college'),
        ),
        migrations.CreateModel(
            name='RestrictCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
            options={
                'unique_together': {('cid', 'country')},
            },
        ),
        migrations.CreateModel(
            name='CourceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=200)),
                ('faculty', models.CharField(max_length=200)),
                ('program', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField()),
                ('eligibility_exam', models.CharField(max_length=200)),
                ('score', models.FloatField()),
                ('min_gpa', models.FloatField()),
                ('Duration', models.CharField(max_length=100)),
                ('Intake', models.CharField(max_length=100)),
                ('fee', models.IntegerField()),
                ('feeCurrency', models.CharField(max_length=100)),
                ('seat', models.IntegerField(blank=True, default=10)),
                ('photo', models.BooleanField(default=False)),
                ('citizenship', models.BooleanField(default=False)),
                ('passport', models.BooleanField(default=False)),
                ('school_certificate', models.BooleanField(default=False)),
                ('highschool_certificate', models.BooleanField(default=False)),
                ('undergraduate_certificate', models.BooleanField(default=False)),
                ('graduate_certificate', models.BooleanField(default=False)),
                ('tor', models.BooleanField(default=False)),
                ('sop', models.BooleanField(default=False)),
                ('scholorship_scheme', models.TextField(default='')),
                ('form_fee', models.FloatField(default=0)),
                ('form', models.BooleanField(default=False)),
                ('openDate', models.DateField(blank=True, null=True)),
                ('closeDate', models.DateField(blank=True, null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='college.college')),
            ],
            options={
                'unique_together': {('college', 'course')},
            },
        ),
    ]
