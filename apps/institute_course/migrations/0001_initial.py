# Generated by Django 3.2.6 on 2021-12-28 08:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('institute', '0001_initial'),
        ('consultancy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentApplicationConsultancy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentApplicationInstitute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstituteCourse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('program', models.CharField(max_length=200)),
                ('intake', models.CharField(choices=[('spring', 'spring'), ('yearly', 'yearly'), ('fall', 'fall')], max_length=100)),
                ('eligibility', models.CharField(max_length=200)),
                ('score', models.FloatField()),
                ('last_mini_academic_score', models.FloatField(validators=[django.core.validators.MinValueValidator(40.0), django.core.validators.MaxValueValidator(100.0)])),
                ('duration_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('total_fee', models.DecimalField(decimal_places=3, max_digits=10)),
                ('fee_currency', models.CharField(max_length=20)),
                ('reg_status', models.BooleanField(default=True)),
                ('reg_open', models.DateField(blank=True, verbose_name='Date')),
                ('reg_close', models.DateField(blank=True, verbose_name='Date')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute_course.course')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute_course.faculty')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteApply',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('action', models.CharField(choices=[('verify', 'verify'), ('accept', 'accept'), ('reject', 'reject'), ('pending', 'pending'), ('applied', 'applied')], default='applied', max_length=20)),
                ('action_data', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('view_date', models.DateField(blank=True, null=True)),
                ('forward', models.BooleanField(default=False)),
                ('cancel', models.BooleanField(default=False)),
                ('action_consultancy_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='consultancy.consultancystaff')),
                ('action_institute_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institute.institutestaff')),
                ('consultancy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='consultancy.consultancy')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institute_course.institutecourse')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.institute')),
            ],
        ),
    ]
